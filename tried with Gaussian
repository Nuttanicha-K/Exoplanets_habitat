#tried with Gaussian Mixture Models since clutering from the prev kida show lots of overlapping and noises
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.mixture import GaussianMixture
import numpy as np

df = pd.read_csv('filtered_exoplanets.csv')
df = df.dropna(subset=['pl_rade', 'pl_bmasse', 'st_teff', 'sy_dist', 'st_mass'])
features = df[['pl_rade', 'pl_bmasse', 'st_mass', 'sy_dist', 'st_teff']]


scaler = StandardScaler()
scaled_features = scaler.fit_transform(features)

inertia = []
for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(scaled_features)
    inertia.append(kmeans.inertia_)

plt.figure(figsize=(8, 6))
plt.plot(range(1, 11), inertia, marker='o', linestyle='--')
plt.title('Elbow Method for Optimal k')
plt.xlabel('Number of Clusters')
plt.ylabel('Inertia (Sum of Squared Distances)')
plt.grid(True)
plt.show()

pca = PCA(n_components=2)
pca_features = pca.fit_transform(scaled_features)
#%%
k = 6
gmm = GaussianMixture(n_components=k, random_state=42)
df['cluster'] = gmm.fit_predict(scaled_features)

df['PCA1'] = pca_features[:, 0]
df['PCA2'] = pca_features[:, 1]


plt.figure(figsize=(10, 6))
plt.scatter(df['PCA1'], df['PCA2'], c=df['cluster'], cmap='plasma', alpha=0.7)
plt.title(f'GMM Clustering of Exoplanets (k={k}, PCA Projection)')
plt.xlabel('PCA 1')
plt.ylabel('PCA 2')
plt.colorbar(label='Cluster')
plt.grid(True)
plt.show()


probs = gmm.predict_proba(scaled_features)
print("\nSample Cluster Probabilities (first 5 rows):")
print(pd.DataFrame(probs).head())


for i in range(k):
    print(f"\nCluster {i} Summary:")
    print(df[df['cluster'] == i].describe())


for cluster in df['cluster'].unique():
    print(f"\nCluster {cluster} Details:")
    cluster_data = df[df['cluster'] == cluster]
    print(cluster_data[['pl_name', 'pl_rade', 'pl_bmasse', 'st_mass', 'pl_orbper', 'sy_dist', 'st_teff']])

# %%
#checking which cluster have much more correlation with what used features
#ทยอยเช็กอยู่ค่อยอัพลง เผื่อตุ๊บ
cluster_data_list = []
for cluster in df['cluster'].unique():
    cluster_data = df[df['cluster'] == cluster][['pl_name', 'pl_rade', 'pl_bmasse', 'st_mass', 'pl_orbper', 'sy_dist', 'st_teff']]
    cluster_data['cluster'] = cluster
    cluster_data_list.append(cluster_data)

all_cluster_data = pd.concat(cluster_data_list, ignore_index=True)
all_cluster_data.to_csv('clustered_exoplanets5.csv', index=False)

print("CSV file has been saved successfully")

#%%
pivot_data = df.groupby('cluster')[['pl_rade']].mean()
plt.figure(figsize=(8, 6))
plt.imshow(pivot_data.T, cmap='coolwarm', aspect='auto')

plt.colorbar(label='Mean Value')
plt.xticks(np.arange(len(pivot_data)), pivot_data.index, rotation=90)
plt.yticks(np.arange(len(pivot_data.columns)), pivot_data.columns)

plt.xlabel('Cluster')
plt.ylabel('pl_rade')
plt.title('Cluster vs Features pl_rade Heatmap', fontsize=14)
plt.tight_layout()

plt.show()
